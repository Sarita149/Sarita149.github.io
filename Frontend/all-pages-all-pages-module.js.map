{"version":3,"sources":["./src/app/all-pages/all-pages-routing.module.ts","./src/app/all-pages/all-pages.module.ts","./src/app/all-pages/all-post-home/all-post-home.component.ts","./src/app/all-pages/all-post-home/all-post-home.component.html","./src/app/all-pages/all-post-home/view-blog/view-blog.component.ts","./src/app/all-pages/all-post-home/view-blog/view-blog.component.html","./src/app/all-pages/home/home.component.ts","./src/app/all-pages/home/home.component.html","./src/app/all-pages/login/login.component.ts","./src/app/all-pages/login/login.component.html","./src/app/all-pages/new-post/new-post.component.ts","./src/app/all-pages/new-post/new-post.component.html","./src/app/all-pages/page-not-found/page-not-found.component.ts","./src/app/all-pages/sign-up/sign-up.component.ts","./src/app/all-pages/sign-up/sign-up.component.html","./src/app/all-pages/sign-up/validators.ts","./src/models/login.ts","./src/services/loginService.ts"],"names":[],"mappings":"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","file":"all-pages-all-pages-module.js","sourcesContent":["import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { LoginComponent } from './login/login.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { NewPostComponent } from './new-post/new-post.component';\nimport { AllPostHomeComponent } from './all-post-home/all-post-home.component';\nimport { ViewBlogComponent } from './all-post-home/view-blog/view-blog.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'Blogs', component: AllPostHomeComponent },\n  { path: 'home', component: HomeComponent },\n  { path: 'newPost', component: NewPostComponent },\n  { path: 'viewblog', component: ViewBlogComponent },\n  { path: 'signup', component: SignUpComponent },\n  { path: 'login', component: LoginComponent },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AllPagesRoutingModule {}\nexport const routingComponents = [\n  SignUpComponent,\n  LoginComponent,\n  PageNotFoundComponent,\n  NewPostComponent,\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport {\n  AllPagesRoutingModule,\n  routingComponents,\n} from './all-pages-routing.module';\nimport { HomeComponent } from './home/home.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { NewPostComponent } from './new-post/new-post.component';\nimport { AllPostHomeComponent } from './all-post-home/all-post-home.component';\nimport { ViewBlogComponent } from './all-post-home/view-blog/view-blog.component';\n\n@NgModule({\n  declarations: [\n    routingComponents,\n    HomeComponent,\n    PageNotFoundComponent,\n    NewPostComponent,\n    AllPostHomeComponent,\n    AllPostHomeComponent,\n    ViewBlogComponent,\n  ],\n  imports: [\n    CommonModule,\n    AllPagesRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n})\nexport class AllPagesModule {}\n","import { Component, OnInit, Output } from '@angular/core';\nimport { LoginService } from 'src/services/loginService';\nimport { Blog } from '../../../models/login';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-all-post-home',\n  templateUrl: './all-post-home.component.html',\n  styleUrls: ['./all-post-home.component.css'],\n})\nexport class AllPostHomeComponent implements OnInit {\n  // array for storing blogs\n  allBlogsArray: Blog[] = new Array<Blog>();\n  // selectedBlog: Blog = new Blog();\n  // myinput;\n\n  constructor(private allblogservice: LoginService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.allblogservice.allPostedblogs().subscribe((res) => {\n      console.log(res);\n      this.allBlogsArray = res;\n    });\n  }\n\n  viewblog(blog) {\n    // localStorage.setItem('data', JSON.stringify(blog));\n    // this.router.navigate(['allpages/viewblog']);\n  }\n\n  // viewblog(blog) {\n     // this.selectedBlog = blog;\n    // this.sendBlog(blog);\n    // console.log(blog);\n    // this.myinput = blog;\n    // this.router.navigate(['allpages/viewblog']);\n  // }\n\n  // sendBlog(blog: Blog) {\n  //   this.allblogservice.sendData(blog);\n  // }\n}\n","<!-- <p>all-post-home works!</p>  -->\n<div class=\"container all-post\">\n  <div class=\"col s12 m7\" *ngFor=\"let item of allBlogsArray\">\n    <div class=\"card\">\n      <div class=\"card-title\">\n        <h1>{{ item.title }}</h1>\n      </div>\n      <hr />\n      <!-- <h5>{{ item.heading }}</h5> -->\n      <div class=\"card-image center waves-effect waves-block waves-light\">\n        <img class=\"activator\" src=\"../../../assets/img1.jpg\" />\n      </div>\n      <div class=\"card-content\">\n        <span class=\"card-heading black-text text-darken-4\">\n          <h4>\n            {{ item.heading }}\n          </h4>\n        </span>\n        <span class=\"gap\">\n          <p class=\"readmore\" (click)=\"viewblog(item)\">\n            <button\n              class=\"btn waves-effect white black-text waves-light\"\n              type=\"submit\"\n            >\n              <i class=\"material-icons right\">more_vert</i>\n            </button>\n          </p>\n        </span>\n      </div>\n      <div class=\"card-content\">\n        <p class=\"flow-text\">{{ item.content }}</p>\n      </div>\n      <!-- <div class=\"card-reveal\">\n        <span class=\"card-title grey-text text-darken-4\">\n          {{ item.title }}\n          <i class=\"material-icons right\">close</i>\n        </span>\n        <div class=\"card-image waves-effect waves-block waves-light\">\n          <img class=\"activator\" src=\"../../../assets/img1.jpg\" />\n        </div>\n        <p>{{ item.content }}</p>\n      </div> -->\n    </div>\n    <hr style=\"padding: 10px;\" />\n    <!-- <app-view-blog [valuetext]=\"myinput\"></app-view-blog> -->\n  </div>\n</div>\n<div></div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Blog } from 'src/models/login';\nimport { LoginService } from 'src/services/loginService';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-view-blog',\n  templateUrl: './view-blog.component.html',\n  styleUrls: ['./view-blog.component.css'],\n})\nexport class ViewBlogComponent implements OnInit {\n  // selectedBlog: Blog;\n  // heading = '';\n  // content = '';\n\n  constructor(private service: LoginService, private routes: Router) {}\n\n  item;\n\n  // getBlog() {\n  //   this.service.getData().subscribe((data) => {\n  //     console.log(data);\n  //     // this.selectedBlog = data;\n  //     // this.heading = data.heading;\n  //     // this.content = data.content;\n  //     // console.log(this.selectedBlog.heading);\n  //   });\n  // }\n\n  ngOnInit(): void {\n    // this.getBlog();\n    this.item = localStorage.getItem('data');\n    this.item = JSON.parse(this.item);\n    console.log(this.item);\n  }\n\n  closePost() {\n    this.routes.navigate(['allpages/Blogs']);\n  }\n  // ngOnInit(): void {\n  // this.getBlog();\n  // }\n\n  // ngOnDestroy(): void {\n  //   //Called once, before the instance is destroyed.\n  //   //Add 'implements OnDestroy' to the class.\n  //   this.valuetext = new Blog();\n  //   this.valuetext = 'null';\n  // }\n}\n","<div class=\"container\">\n    <!-- <input type=\"text\" [value]=\"valuetext\" /> -->\n    <div class=\"row\">\n        <!-- <div class=\"row\"> -->\n        <!-- <div class=\"col s12 m6 \"> -->\n        <div class=\"card\">\n            <span class=\"card-heading\">\n        <div>\n          <h4>\n            {{ item.heading }}\n          </h4>\n        </div>\n        <div class=\"closebtn\">\n          <button class=\"btn red black-text\"\n            type=\"submit\" (click)=\"closePost()\"><i class=\"material-icons\n              center\">close</i>\n          </button>\n        </div>\n      </span>\n            <div class=\"center waves-effect waves-block waves-light\">\n                <img class=\"activator\" src=\"../../../assets/img1.jpg\" />\n            </div>\n            <div class=\"card-content black-text\">\n                <p>\n                    {{ item.content }}\n                    <!-- I am a very simple card. I am good at containing small bits of\n          information. I am convenient because I require little markup to use\n          effectively. -->\n                </p>\n            </div>\n            <div class=\"card-action\">\n                <button class=\"btn waves-effect pink black-text waves-light\" type=\"submit\">\n          edit\n          <!-- <i class=\"material-icons right\">more_vert</i> -->\n        </button>\n                <button class=\"btn\" type=\"submit\">\n          save\n        </button>\n\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {}\n  forlogin() {\n    this.router.navigate(['allpages/login']);\n  }\n}\n","<!-- <main> -->\r\n<link\r\n  href=\"https://fonts.googleapis.com/css2?family=Acme&display=swap\"\r\n  rel=\"stylesheet\"\r\n/>\r\n<!-- <img src=\"../../../assets/nature_img1.png\" alt=\"\" /> -->\r\n<!-- </main> -->\r\n<section class=\"secOne\">\r\n  <div class=\"main center\">\r\n    <div>\r\n      <h2>\r\n        <span><i> Blogs That Will Inspire You to </i></span><br /><span\r\n          ><i> Achieve Your Goals in Life</i></span\r\n        >\r\n      </h2>\r\n      <h3 class=\"\">\r\n        <span>WordPress.com makes it easy for you to start </span><br />\r\n        <span>your own blog. Signup for free to start sharing your ideas.</span>\r\n      </h3>\r\n      <div class=\"center\">\r\n        <button\r\n          (click)=\"forlogin()\"\r\n          class=\"waves-effect waves-light #c51162 pink accent-4 darken-2 btn\"\r\n        >\r\n          start your blog\r\n        </button>\r\n      </div>\r\n      <!-- </div> -->\r\n    </div>\r\n  </div>\r\n</section>\r\n<section class=\"secTwo\">\r\n  <div class=\"col s12 m7 center\">\r\n    <h4><span>Customize your domain name</span></h4>\r\n    <hr />\r\n    <div class=\"domainFeature\">\r\n      <div class=\"blank\"></div>\r\n      <div class=\"ptag\">\r\n        <h5>Register a new domain</h5>\r\n        <div style=\"margin-top: 30px;\">\r\n          <p>\r\n            Register a domain for your<br />\r\n            site to make it easier to <br />remember and easier to share.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div class=\"blank\"></div>\r\n      <div class=\"ptag\">\r\n        <h5>Bring your own domain</h5>\r\n        <div style=\"margin-top: 30px;\">\r\n          <p>\r\n            <span> lready have a domain name? </span> <br />\r\n            <span> Point it to your WordPress. </span><br />\r\n            <span> com website in a few easy steps</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div class=\"blank\"></div>\r\n      <div class=\"ptag\">\r\n        <h5>Connect your email</h5>\r\n        <div style=\"margin-top: 30px;\">\r\n          <p>\r\n            Use your custom domain in your email address by activating email\r\n            forwarding, G Suite, or other email services.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div class=\"blank\"></div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<section class=\"secThree\">\r\n  <div class=\"col s12 m7 center\"></div>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\n// import { FormGroup, FormControl, Validators, NgForm } from '@angular/forms';\n// import { LoginUser } from '../model/both-pages';\nimport { Login } from '../../../models/login';\nimport { LoginService } from '../../../services/loginService';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  constructor(private loginService: LoginService, private router: Router) {}\n\n  //  class object\n  userDetails = new Login();\n\n  regex = '^[A-Za-z]w{4,10}$';\n\n  ngOnInit(): void {}\n\n  login() {\n    this.loginService.loginApi(this.userDetails).subscribe((result) => {\n      // console.log(JSON.stringify(result) + 'Login result');\n      // console.log(result.message + 'Login result');\n      if (result.message === 'succesfull') {\n        this.router.navigate(['allpages/Blogs']);\n      } else {\n        console.log('invalid');\n      }\n    });\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <!-- <form class=\"col s12\" [formGroup]=\"loginForm\" (ngSubmit)=\"LoginUser()\">\n      <div class=\"row\">\n        <div class=\"input-field col s6\">\n          <label>UserName</label>\n          <input class=\"validate\" type=\"text\" formControlName=\"name\" />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"input-field col s6\">\n          <label>Password</label>\n          <input class=\"validate\" type=\"password\" formControlName=\"password\" />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"input-field col s6 center\">\n          <button\n            type=\"submit\"\n            [disabled]=\"!loginForm.valid\"\n            class=\"black-text waves-effect blue btn\"\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    </form> -->\n\n    <form class=\"col s12\" #loginfrom=\"ngForm\" (ngSubmit)=\"login()\">\n      <div class=\"row\">\n        <div class=\"input-field col s6\">\n          <label for=\"username\"> </label>\n          <input\n            placeholder=\"Username\"\n            type=\"text\"\n            [(ngModel)]=\"userDetails.username\"\n            name=\"username\"\n            #Name=\"ngModel\"\n            class=\"validate\"\n            required\n            minlength=\"3\"\n          />\n          <div\n            class=\"red-text\"\n            *ngIf=\"Name.errors && Name.invalid && Name.touched\"\n          >\n            <small *ngIf=\"Name.errors.required\">Username is required</small>\n            <small *ngIf=\"Name.errors.minlength\"\n              >Username must contain minimum 3 characters</small\n            >\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"input-field col s6\">\n          <label for=\"password\" class=\"label\"> </label>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            [(ngModel)]=\"userDetails.password\"\n            #password=\"ngModel\"\n            required\n            minlength=\"6\"\n          />\n          <div\n            class=\"red-text\"\n            *ngIf=\"password.errors && password.invalid && password.touched\"\n          >\n            <small *ngIf=\"password.errors.required\">Password is required</small>\n            <small *ngIf=\"password.errors.pattern\"\n              >Password must contains alpha numeric value</small\n            >\n            <small *ngIf=\"password.errors.minlength\"\n              >Password is minimum 6 characters long\n            </small>\n          </div>\n        </div>\n      </div>\n      <div>\n        <button class=\"btn\" type=\"submit\" [disabled]=\"!loginfrom.valid\">\n          Login\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/services/loginService';\nimport { Router } from '@angular/router';\nimport { Blog } from '../../../models/login';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-new-post',\n  templateUrl: './new-post.component.html',\n  styleUrls: ['./new-post.component.css'],\n})\nexport class NewPostComponent implements OnInit {\n  userblog = new FormGroup({\n    title: new FormControl('', [Validators.required]),\n    heading: new FormControl('', [Validators.required]),\n    content: new FormControl('', [Validators.required]),\n  });\n\n  constructor(private blogservice: LoginService, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  blog() {\n    // console.log(this.userblog.value);\n    if (this.userblog.valid) {\n      this.blogservice.blogpost(this.userblog.value).subscribe((res) => {\n        console.log(res);\n        this.userblog.reset();\n        this.router.navigate(['allpages/home']);\n      });\n    }\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <form class=\"col s12\" [formGroup]=\"userblog\" (ngSubmit)=\"blog()\">\n      <div class=\"col s12 m7\">\n        <div class=\"card\">\n          <div class=\"card-title\">\n            <input type=\"text\" formControlName=\"title\" placeholder=\"*title\" />\n          </div>\n          <div class=\"card-content\">\n            <input\n              type=\"text\"\n              formControlName=\"heading\"\n              placeholder=\"*heading\"\n            />\n            <textarea\n              formControlName=\"content\"\n              placeholder=\"Write Here\"\n              cols=\"30\"\n              rows=\"10\"\n            ></textarea>\n          </div>\n          <div class=\"card-action\">\n            <button class=\"btn\" type=\"submit\">Save</button>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  template: `\n    <p>\n      page-not-found works!\n    </p>\n  `,\n  styles: [],\n})\nexport class PageNotFoundComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  Validators,\n  FormBuilder,\n  AbstractControl,\n} from '@angular/forms';\nimport { phonenumber, passwordAlphaNumeric } from './validators';\nimport { LoginService } from '../../../services/loginService';\nimport { Register } from 'src/models/login';\nimport { VirtualTimeScheduler } from 'rxjs';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css'],\n})\nexport class SignUpComponent implements OnInit {\n  registration = new FormGroup({\n    name: new FormControl('', [\n      Validators.required,\n      Validators.minLength(3),\n      // Validators.name,\n    ]),\n    age: new FormControl('', [\n      Validators.required,\n      Validators.maxLength(2),\n      Validators.minLength(2),\n    ]),\n    contact: new FormControl('', [\n      phonenumber,\n      Validators.required,\n      Validators.maxLength(10),\n      Validators.minLength(10),\n    ]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n  });\n  // registration: FormGroup\n  // constructor(private fb: FormBuilder) {\n  //   this.registration = this.fb.group({\n  //     name: ['', [Validators.required]],\n  //     age: [\n  //       '',\n  //       [Validators.required, Validators.maxLength(2), Validators.minLength(2)],\n  //     ],\n  //     contact: [\n  //       '',\n  //       [\n  //         phonenumber,\n  //         Validators.required,\n  //         Validators.maxLength(10),\n  //         Validators.minLength(10),\n  //       ],\n  //     ],\n  //     email: ['', [Validators.required, Validators.email]],\n  //     password: ['', [passwordAlphaNumeric, Validators.required]],\n  //   });\n  // },\n\n  constructor(private signupService: LoginService, private router: Router) {}\n  // module class obj\n  // RegUserDetails = new Register();\n\n  // service\n  Signup() {\n    if (this.registration.valid) {\n      this.signupService\n        .registerApi(this.registration.value)\n        .subscribe((data) => {\n          console.log(data);\n          this.registration.reset();\n          this.router.navigate(['allpages/login']);\n        });\n    }\n    // if (this.registration.value) {\n    //   console.log(this.registration);\n    // }\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"container center\">\n  <div class=\"row\">\n    <form class=\"col s12\" [formGroup]=\"registration\" (ngSubmit)=\"Signup()\">\n      <!-- <div formGroupName=\"UserDetails\"> -->\n      <div class=\"row\">\n        <div class=\"input-field col s6\">\n          <input\n            id=\"first_name\"\n            type=\"text\"\n            class=\"validate\"\n            formControlName=\"name\"\n          />\n          <label for=\"first_name\">Name</label>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"input-field col s6\">\n          <label>Age</label>\n          <input\n            type=\"text\"\n            class=\"validate\"\n            formControlName=\"age\"\n            pattern=\"[0-9]{2}\"\n          />\n          <small\n            class=\"text-danger\"\n            *ngIf=\"\n              !registration.get('age').valid && registration.get('age').touched\n            \"\n            ><span class=\"left red-text\">please enter valid Age </span>\n          </small>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"input-field col s6\">\n          <label>Contact</label>\n          <input class=\"validate\" type=\"tel\" formControlName=\"contact\" />\n          <small\n            class=\"text-danger\"\n            *ngIf=\"\n              !registration.get('contact').valid &&\n              registration.get('contact').touched\n            \"\n            ><span class=\"left red-text\"\n              >please enter you 10-digits number\n            </span>\n          </small>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"input-field col s6\">\n          <label>Email</label>\n          <input class=\"validate\" type=\"email\" formControlName=\"email\" />\n          <small\n            class=\"text-danger\"\n            *ngIf=\"\n              !registration.get('email').valid &&\n              registration.get('email').untouched\n            \"\n            ><span class=\"left red-text\">please fill the field </span>\n          </small>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"input-field col s6\">\n          <label>Password</label>\n          <input class=\"validate\" type=\"password\" formControlName=\"password\" />\n          <small\n            class=\"text-danger\"\n            *ngIf=\"\n              !registration.get('password').valid &&\n              registration.get('password').touched\n            \"\n            ><span class=\"left red-text\">please enter valid password </span>\n          </small>\n        </div>\n      </div>\n      <!-- </div> -->\n      <div class=\"row\">\n        <div class=\"input-field col s6\">\n          <button type=\"submit\" class=\"btn\">\n            Submit\n          </button>\n          <button routerLink=\"/\" class=\"right red btn\">\n            Cancel\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { AbstractControl, FormGroup } from '@angular/forms';\r\n\r\nexport function phonenumber(control: AbstractControl) {\r\n  if (control && (control.value !== null || control.value !== undefined)) {\r\n    const inputvalue = control.value;\r\n    var phnumber = new RegExp('^[0-9]{10}$');\r\n    if (!phnumber.test(inputvalue)) {\r\n      return {\r\n        isError: true,\r\n      };\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function passwordAlphaNumeric(control: AbstractControl) {\r\n  if (control && (control.value !== null || control.value !== undefined)) {\r\n    var inputvalue = control.value;\r\n    var alphaNumeric = new RegExp('^[A-Za-z]w{4,10}$');\r\n    if (!alphaNumeric.test(inputvalue)) {\r\n      return {\r\n        isError: true,\r\n      };\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n// import function phonenumber() in component.ts file\r\n// import function passwordAlphaNumeric() in component.ts file\r\n","export class Login {\r\n  username: string;\r\n  password: any;\r\n}\r\n\r\nexport class Register {\r\n  name: string;\r\n  age: string;\r\n  contact: Number;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport class Blog {\r\n  title: string;\r\n  heading: string;\r\n  // img: string;\r\n  content: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\r\nimport { Login, Register, Blog } from '../models/login';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoginService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  private viewBlog;\r\n\r\n  // subject\r\n  private data$ = new BehaviorSubject<Blog>(this.viewBlog);\r\n\r\n  loginApi(user: Login): Observable<any> {\r\n    return this.httpClient.post<Login>('http://localhost:5000/api/login', user);\r\n  }\r\n\r\n  blogpost(user: Blog): Observable<any> {\r\n    return this.httpClient.post<Blog>(\r\n      'http://localhost:5000/api/addblog',\r\n      user\r\n    );\r\n  }\r\n\r\n  registerApi(user: Register): Observable<any> {\r\n    return this.httpClient.post<Register>(\r\n      'http://localhost:5000/api/register',\r\n      user\r\n    );\r\n  }\r\n\r\n  allPostedblogs(): Observable<any> {\r\n    return this.httpClient.get<any>('http://localhost:5000/api/allblogs');\r\n  }\r\n\r\n  // // create communication b/w all-post & view-blog\r\n  // sendData(blog: Blog) {\r\n  //   // this.data$.next(blog);\r\n  //   this.viewBlog = blog;\r\n  // }\r\n  // getData() {\r\n  //   return this.data$;\r\n  // }\r\n}\r\n"],"sourceRoot":"webpack:///"}